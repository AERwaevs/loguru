{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Voxl",
				"VoxelVertex"
			],
			[
				"ec_fo",
				"ec_format_typed"
			],
			[
				"ERRO",
				"ERROR_CONTEXT"
			],
			[
				"Error",
				"ErrorContext	(error_context.hpp)"
			],
			[
				"make_Ec",
				"make_ec_kernel"
			],
			[
				"load_un",
				"load_uncompressed_pvr_from_data	(gl_lib.hpp)"
			],
			[
				"resu",
				"result_size"
			],
			[
				"buff",
				"buffer_size"
			],
			[
				"CGCo",
				"CGContextRef"
			],
			[
				"config",
				"configuru::Config"
			],
			[
				"terminal",
				"terminal_has_color"
			],
			[
				"Parse",
				"ParseOptions	(configuru.hpp)"
			],
			[
				"conf",
				"configuru	(configuru.hpp)"
			],
			[
				"confi",
				"configuru"
			],
			[
				"mess",
				"message_str"
			],
			[
				"null",
				"nullptr"
			],
			[
				"expe",
				"expected_tabs"
			],
			[
				"num",
				"num_frames"
			],
			[
				"res",
				"result"
			],
			[
				"stack",
				"stacktrace_as_stdstring"
			],
			[
				"BadL",
				"BadLookupType"
			],
			[
				"name",
				"namespace	(file_wrapper.hpp)"
			],
			[
				"CHE",
				"CHECK_LT_F"
			],
			[
				"CHECK",
				"CHECK_NOTNULL"
			],
			[
				"as_int",
				"as_integer"
			],
			[
				"WARN",
				"WARNING"
			],
			[
				"sug",
				"suggest_filename"
			],
			[
				"buf",
				"buff_size"
			],
			[
				"threa",
				"thread_name"
			],
			[
				"ove",
				"override"
			],
			[
				"upd",
				"update_imgui	(game_base.hpp)"
			],
			[
				"level",
				"level_size"
			],
			[
				"Rig",
				"RIGHT	(game.hpp)"
			],
			[
				"unit_cen",
				"unit_center_world"
			],
			[
				"noise",
				"noise_seed"
			],
			[
				"nois",
				"NoiseMaker"
			],
			[
				"SliderFlo",
				"SliderFloat	(imgui.h)"
			],
			[
				"Vec",
				"Vec2	(imgui_sdl.cpp)"
			],
			[
				"Im",
				"ImGui"
			],
			[
				"glCle",
				"glClearColor"
			],
			[
				"thro",
				"throw_error"
			],
			[
				"G_",
				"g_verbosity"
			],
			[
				"verbo",
				"verbosity_level"
			],
			[
				"Erro",
				"ErrorContextRAII"
			],
			[
				"Er",
				"ErrorContextStack"
			],
			[
				"wite_he",
				"write_hex_16"
			],
			[
				"write_hex",
				"write_hex_4"
			],
			[
				"prefix",
				"prefix_comments"
			],
			[
				"ImGuiPP",
				"ImGuiPP::InputText"
			],
			[
				"mes",
				"messages"
			],
			[
				"event",
				"event_response_"
			],
			[
				"Resu",
				"Result::finished"
			],
			[
				"target",
				"target_unit"
			],
			[
				"self",
				"self_as_unit"
			],
			[
				"Combo",
				"ComboBox"
			],
			[
				"hei",
				"height_in_items"
			],
			[
				"curr",
				"current_item"
			],
			[
				"push",
				"push_back"
			],
			[
				"items_c",
				"items_c_str"
			],
			[
				"button_",
				"button_up"
			],
			[
				"Di",
				"DisplaySize"
			],
			[
				"_sel",
				"_selected_unit"
			],
			[
				"_has",
				"_has_added_input_char"
			],
			[
				"ImGuiSd",
				"ImGui_SDL"
			],
			[
				"vlist",
				"vlist_copy"
			],
			[
				"vli",
				"vlist_copy"
			],
			[
				"Log",
				"LogType::FATAL"
			],
			[
				"remov",
				"remove_if"
			],
			[
				"ERR",
				"ERROR_CONTEXT"
			],
			[
				"on_h",
				"on_hit"
			],
			[
				"has_",
				"has_key"
			],
			[
				"member",
				"member_event"
			],
			[
				"trigg",
				"trigger_event"
			],
			[
				"trigger_e",
				"trigger_event"
			],
			[
				"pop",
				"pop_back"
			],
			[
				"trig",
				"trigger_time"
			],
			[
				"_game",
				"_game_time"
			],
			[
				"tex",
				"texture"
			],
			[
				"dark",
				"darkness_tc_mat"
			],
			[
				"trans",
				"translate2D"
			],
			[
				"_ga",
				"_game_fbo"
			],
			[
				"type",
				"typename"
			],
			[
				"_las",
				"_last_type"
			],
			[
				"UN",
				"UNKNOWN"
			],
			[
				"Config",
				"ConfigComponent"
			],
			[
				"try_",
				"try_trigger_comment"
			],
			[
				"world",
				"world_pos"
			],
			[
				"on_bu",
				"on_button_up"
			],
			[
				"state_or",
				"state_or_null"
			],
			[
				"start",
				"start_unit"
			],
			[
				"texture",
				"texture_name"
			],
			[
				"_room",
				"_room_size"
			],
			[
				"siz",
				"size_t"
			],
			[
				"frame_",
				"frame_delays"
			],
			[
				"spe",
				"speech_bubble"
			],
			[
				"comm",
				"command"
			],
			[
				"mob",
				"mobile"
			],
			[
				"ENSUR",
				"ENSURE_FMT"
			],
			[
				"parent",
				"parent_unit"
			],
			[
				"mobi",
				"mobile_source"
			],
			[
				"_mo",
				"_mobile_source"
			],
			[
				"local",
				"local_tm"
			],
			[
				"jo",
				"journal_unit"
			],
			[
				"worl_",
				"world_tm"
			],
			[
				"sou",
				"source_unit"
			],
			[
				"game_pick_up",
				"game_pick_up_journal"
			],
			[
				"align",
				"alignment"
			],
			[
				"ENSU",
				"ENSURE_FMT"
			],
			[
				"label",
				"label_config"
			],
			[
				"journal",
				"journal_page_config"
			],
			[
				"Label",
				"LabelComponent"
			],
			[
				"_hud",
				"_hud_root"
			],
			[
				"dummy",
				"dummy_gui_root"
			],
			[
				"_wor",
				"_world"
			],
			[
				"sound",
				"sound_id"
			],
			[
				"door",
				"doorcreak"
			],
			[
				"asset",
				"parse_assert"
			],
			[
				"line",
				"line_indentation"
			],
			[
				"_in",
				"_indentation"
			],
			[
				"camera",
				"camera_data"
			],
			[
				"dia",
				"dialogue_config"
			],
			[
				"play",
				"play"
			],
			[
				"Sound",
				"SoundComponent"
			],
			[
				"Sod",
				"SoundComponent"
			],
			[
				"commen",
				"comment_action"
			],
			[
				"delta",
				"delta_unit"
			],
			[
				"remeb",
				"remember_item"
			],
			[
				"remember_",
				"remember_item"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 87.0,
		"last_filter": "wrap",
		"selected_items":
		[
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"sna",
				"Convert Case: snake_case"
			],
			[
				"snak",
				"Convert Case: snake_case"
			],
			[
				"came",
				"Convert Case: camelCase"
			],
			[
				"Snak",
				"Convert Case: snake_case"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"snake",
				"Convert Case: snake_case"
			],
			[
				"cam",
				"Convert Case: camelCase"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"canc",
				"Build: Cancel"
			],
			[
				"s",
				"Sort Lines"
			],
			[
				"ascii",
				"ASCII Decorator: Font Selector"
			],
			[
				"forma",
				"Clang Format: Format Selection"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"sor",
				"Sort Lines"
			],
			[
				"so",
				"Sort Lines"
			],
			[
				"soet",
				"Set Syntax: Objective-C++"
			],
			[
				"form",
				"Clang Format: Format Selection"
			],
			[
				"cancel",
				"Build: Cancel"
			],
			[
				"prev",
				"Markdown Preview: Preview in Browser"
			],
			[
				"previ",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdown",
				"Set Syntax: Markdown Extended"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"r",
				"Indentation: Reindent Lines"
			],
			[
				"ind",
				"Indentation: Reindent Lines"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"sirt",
				"SublimeCodeIntel: Reset"
			],
			[
				"copy fi",
				"Copy File Path"
			],
			[
				"can",
				"Build: Cancel"
			],
			[
				"cance",
				"Build: Cancel"
			],
			[
				"",
				"ASCII Decorator: Font Selector"
			],
			[
				"preferneces",
				"Preferences: Settings - User"
			],
			[
				"settidn",
				"Preferences: Settings - Default"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"c1+",
				"Set Syntax: C++11"
			],
			[
				"fi",
				"Filter Lines: Filter With String"
			],
			[
				"fil",
				"Filter Lines: Filter With String"
			],
			[
				"filt",
				"Filter Lines: Filter With String"
			],
			[
				"filte",
				"Filter Lines: Filter With String"
			],
			[
				"cane",
				"Build: Cancel"
			],
			[
				"c++",
				"Set Syntax: C++11"
			],
			[
				"+",
				"Set Syntax: C++11"
			],
			[
				"c++1",
				"Set Syntax: C++11"
			],
			[
				"c++11",
				"Set Syntax: C++11"
			],
			[
				"SORT",
				"Sort Lines"
			],
			[
				"spac",
				"Indentation: Convert to Spaces"
			],
			[
				"filter",
				"Filter Lines: Filter With String"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"comment",
				"Toggle Comment"
			],
			[
				"markdo",
				"Set Syntax: Markdown"
			],
			[
				"makr",
				"Set Syntax: Markdown"
			],
			[
				"spa",
				"Indentation: Convert to Spaces"
			],
			[
				"c#",
				"Set Syntax: C#"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"packag",
				"Package Control: Disable Package"
			],
			[
				"Upp",
				"Convert Case: Upper Case"
			],
			[
				"Upper",
				"Convert Case: Upper Case"
			],
			[
				"UPPE",
				"Convert Case: Upper Case"
			],
			[
				"uppe",
				"Convert Case: Upper Case"
			],
			[
				"format",
				"Clang Format: Format Selection"
			],
			[
				"style",
				"Clang Format: Select Style"
			],
			[
				"styl",
				"Clang Format: Select Style"
			],
			[
				"sele",
				"Clang Format: Select Style"
			],
			[
				"selectst",
				"Clang Format: Select Style"
			],
			[
				"clan",
				"Clang Format: Format Selection"
			],
			[
				"clang fo",
				"Clang Format: Format Selection"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"lowe",
				"Convert Case: Lower Case"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"glsl",
				"Set Syntax: SJSON_GLSL"
			],
			[
				"sjsosn",
				"Set Syntax: SJSON_GLSL"
			],
			[
				"sjso",
				"Set Syntax: JSON"
			],
			[
				"sjson",
				"Set Syntax: SJSON_GLSL"
			],
			[
				"sjsons",
				"Set Syntax: SJSON_GLSL"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"SJSON",
				"Set Syntax: SJSON_GLSL"
			],
			[
				"c",
				"Set Syntax: C"
			],
			[
				"sulb",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"sublime",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"clang",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"convert",
				"Indentation: Convert to Tabs"
			],
			[
				"gls",
				"Set Syntax: GLSL"
			],
			[
				"opensh",
				"Set Syntax: Open Shading Language"
			],
			[
				"open",
				"Set Syntax: Open Shading Language"
			],
			[
				"shadin",
				"Set Syntax: Open Shading Language"
			],
			[
				"opnegl",
				"Set Syntax: Open Shading Language"
			],
			[
				"es",
				"Set Syntax: ESSL"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"inden",
				"Indentation: Reindent Lines"
			],
			[
				"lua",
				"Set Syntax: Lua Dev"
			],
			[
				"isnt",
				"Package Control: Install Package"
			],
			[
				"luad",
				"Set Syntax: Lua Dev"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"keys",
				"Preferences: Key Bindings - User"
			],
			[
				"sol",
				"Set Syntax: Sol"
			],
			[
				"setti",
				"Preferences: Settings - Default"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"defau",
				"Preferences: Settings - Default"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"space",
				"Indentation: Convert to Spaces"
			],
			[
				"indn",
				"Indentation: Reindent Lines"
			],
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"tab",
				"Indentation: Convert to Tabs"
			],
			[
				"setting",
				"Preferences: Settings - Default"
			],
			[
				"love",
				"Set Syntax: Lua (Love)"
			]
		],
		"width": 520.0
	},
	"console":
	{
		"height": 260.0,
		"history":
		[
			"==================================================================",
			"================================================================",
			"clear"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/emilk/Documents/kod/Voxels/Source/sound/sound.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/gui/touch_tracker.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/gui/touch_tracker.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/main.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/level_painter.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/level_painter.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/comp_painter.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/cube_map.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/fwd.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/gl_lib_tools.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/ipainter.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/paint_util.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/shader_mngr.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/tex_mngr.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/tex_mngr.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/tex_proxy.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/tex_proxy.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/world.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/os/OS.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/osx/osx.mm",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/image_mngr.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/image_mngr",
		"/Users/emilk/Documents/kod/Voxels/Source/core/system.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/gui/component.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/ios/ImageLib.h",
		"/Users/emilk/Documents/kod/Voxels/Source/ios/ViewController.mm",
		"/Users/emilk/Documents/kod/Voxels/Source/lua_glue/function_overload.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/app.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/cube_map_gen.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/image.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/world.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/cube_map_gen.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/lua.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/model.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/util/soa.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/item.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/item.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/level.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/level.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/lua.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/model.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/player.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/player.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/voxel_particle.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/core/system.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/app.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/camera.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/constants.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/camera.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/gui/events.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/gui/events.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/gui/fwd.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/gui/key.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/gui/key_tracker.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/gui/key_tracker.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/ios/Image.mm",
		"/Users/emilk/Documents/kod/Voxels/Source/ios/ImageLib.mm",
		"/Users/emilk/Documents/kod/Voxels/Source/ios/iOS.mm",
		"/Users/emilk/Documents/kod/Voxels/Source/ios/Persistance.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/ios/Persistance.mm",
		"/Users/emilk/Documents/kod/Voxels/Source/math/aabb.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/angle_tester.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/capsule.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/ios/KitchenSink.mm",
		"/Users/emilk/Documents/kod/Voxels/Source/lua_glue/lua_glue.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/lua_glue/lua_glue.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/line_seg.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/lua_glue/lua_test.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/capsule.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/circle.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/direction.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/direction.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/frustum.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/frustum.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/intersect.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/intersect.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/mat3.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/movement_tracker.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/mat4.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/math.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/noise.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/noise.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/plane.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/plane.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/ray.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/quaternion.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/random.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/random.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/trace.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/trace.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/vec2.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/vec3.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/vec4.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/movement_tracker.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/os/os.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/osx/osx_ios_common.mm",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/color.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/color_types.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/color.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/cube_map.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/image_mngr.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/ipainer.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/comp_painter.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/image.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/paint/shader_mngr.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/sound/decode.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/sound/sound.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/util/array_2d.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/util/debug.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/util/algo.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/util/signal.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/util/stopwatch.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/util/string.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/util/threading.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/util/util.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/serializer.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/shape.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/shape.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/trace.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/trace.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/units.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/visit.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/world/voxel.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/math/Vec2.hpp",
		"/Users/emilk/Documents/kod/Voxels/data/scripts/inspect.lua",
		"/Users/emilk/Documents/kod/Voxels/Source/app/LevelPainter.hpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/LevelPainter.cpp",
		"/Users/emilk/Documents/kod/Voxels/Source/app/Level.hpp"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"*.hpp, *.cpp, *.h, *.m, *.mm",
			"*.lua",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c, *.lua",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c, *.luaa",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c, *.lua",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c, *.shader, *.sh, *.md",
			"",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c, *.shader, *.sh, *.md",
			"a",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c, *.shader, *.sh, *.md",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c, *.shader",
			"*.cfg",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c, *.shader",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c",
			"*.plist",
			"*.hpp, *.cpp, *.mm, *.m, *.h, *.c",
			"*.hpp, *.cpp, *.mm, *.m, *.h",
			"*.hpp, *.cpp, *.mm, *.m, *.shader",
			"*.shader, *.glsl",
			"",
			"*.hpp, *.cpp, *.mm, *.m, *.shader",
			"*.hpp, *.cpp, *.mm, *.m",
			"*.mm, *.m",
			"*.hpp, *.cpp",
			"",
			"*.hpp, *.cpp",
			"",
			"*.hpp, *.cpp",
			"*.hpp, *.cpp, *.pch",
			"*.hpp, *.cpp",
			"*.shader",
			"*.h, *.hpp, *.cpp, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.m, *.mm",
			"*.cpp",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.m, *.mm",
			"*.h, *.hpp, *.cpp, *.m, *.mm, *.cfg",
			"*.h, *.hpp, *.cpp, *.m, *.mm",
			"*.cfg",
			"",
			"*.h, *.hpp, *.cpp, *.m, *.mm",
			"*.h, *.hpp, *.cpp",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.cfg, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.cfg, *.m, *.mm",
			"*.h, *.hpp, *.cpp, -*imgui*, -*stb*",
			"*.h, *.hpp, *.cpp, -*imgui*",
			"*.h, *.hpp, *.cpp",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.cfg, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.cfg, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.cfg, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.cfg, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.cfg, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.cfg, *.m, *.mm",
			"*.cfg",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.cfg, *.m, *.mm",
			"*.h, *.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.sjson, *.m, *.mm",
			"*.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.sjson, *.m, *.mm",
			"*.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py, *.sjson",
			"*.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py",
			"",
			"*.hpp, *.cpp, *.shader, *.glsl, *.sh, *.py",
			"*.hpp, *.cpp, *.shader, *.glsl, *.sh, *.python",
			"*.hpp, *.cpp, *.shader, *.glsl",
			"*.hpp, *.cpp",
			"",
			"*.cpp, *.hpp",
			"*.cpp, *.h, *.hpp",
			"*.cpp, *.h",
			"",
			"*.cpp",
			"*.h, *.hpp, *.cpp",
			"*.h, *.hpp",
			"*.h, *.cpp, *.hpp",
			"*.h",
			"*.g",
			"*.cpp, *.hpp",
			"*.cpp",
			"",
			"*.sol",
			"*.lua",
			"*.sol",
			"",
			"*.sol",
			"",
			"Parser.",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"check_forALError",
			"id",
			"m_dragHandler",
			"_is_darg",
			"m_isDrag",
			"#include <gl_lib",
			"foundation",
			"application_services",
			"i_painter.hpp",
			"array2D",
			"(\\#include .(?:[a-z_]+\\/)?)([A-Za-z_]+)([A-Z][a-z_]+\\.hpp)",
			"(\\#include .(?:[a-z_]+\\/)?)([A-Z][A-Za-z_]+)",
			"(\\#include .(?:[a-z_]+\\/)?)([a-z][a-z_]+)([A-Z])",
			"(\\#include .[a-z_]+\\/)([A-Z][a-z_]+)",
			"(\\#include .[a-z_]+\\/)",
			"(\\#include .[a-z_]+)([A-Z][a-z_]+)",
			"(\\#include .)([A-Z][a-z_]+)",
			"(\\#include .)([a-z][a-z_]+)([A-Z])",
			"(\\#include .)([A-Z][a-z_]+)([A-Z])",
			"(\\#include .)([A-Z][a-z_]+)([A-Z]))",
			"(\\#include .)([A-Z][a-z_]+)([A-Z]))     ->   \\1\\l2_\\l3",
			"(\\#include .)([a-z][a-z_]+)([A-Z]))",
			"KeyEvent",
			"\\bm_([a-z_]+)\\b",
			"fillSphere",
			"wallHeight",
			"wallThickness",
			"\\b([a-z][a-z_]+)([A-Z])",
			"NumSteps",
			"wallOffset",
			"\\b([a-z][a-z_]+)([A-Z])",
			"fillBoxPosSize",
			"baseColor",
			"setVoxel",
			"\\b([a-z][a-z_]+)([A-Z])",
			"waveLength",
			"\\b([a-z][a-z_]+)([A-Z])",
			"\\b([a-z][a-z_]+)([A-Z])  ->   \\1_\\l\\2",
			"onKeyDown",
			"buildWall",
			"buildStairs",
			"buildHeightField",
			"buildLevel",
			"build_level",
			"texture_cube",
			"out__frag_color",
			"uniform sampler_cube",
			"u_sampler_cube",
			"lua__integer",
			"lua__state",
			"pathNS",
			"nameNS",
			"Abort",
			"data_dir",
			"\\b([b-fh-z][a-z][a-z_]*)([A-Z][a-z])",
			"\\b([b-z][a-z][a-z_]*)([A-Z][a-z])",
			"\\bm_([a-z_]+)\\b -> _\\1",
			"add_strip",
			"CubeMapGen",
			"data_path",
			"%f",
			"rel",
			"Keu",
			"SDLK_",
			"Delete",
			"F15",
			"10",
			"9",
			"Key::Num",
			"SDLK_",
			"0",
			"MINUS",
			"Keu",
			"Keu::",
			"A",
			"SDL_WINDOW_ALLOW_HIGHDPI",
			"\n#define texture2D texture",
			"texture2D",
			"textureCube",
			"gl_FragColor",
			"ps_in",
			"varying",
			"attribute",
			"#include \"",
			"m_app",
			"&& m",
			"CHECK(",
			"Key",
			"Key::",
			"touch_tracker",
			"m_touchTracker",
			"TouchTracker",
			"os::setMouseCapture(true);\n",
			"TouchTracker",
			"App",
			"m_touch_tracker",
			"g_app",
			"paint::TempViewPort",
			"keyTracker",
			"touchTracker",
			"setGLContext",
			"<gui",
			"Button",
			"TexProxy",
			"g_texMngr",
			"TexMngr",
			"opaqueStrip",
			"uFogColor",
			"uSamplerPerturb",
			"uSamplerCube",
			"uSampler",
			"vNormal",
			"vShinyness",
			"vFogFactor",
			"vColor",
			"vEnvDir",
			"vTC",
			"vModelPos",
			"uFogRadius",
			"uEyePos",
			"uNormalMat",
			"uM",
			"uColor",
			"cellAt",
			"add_strip",
			"append",
			"paint",
			"normalMat"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": true,
		"regex": false,
		"replace_history":
		[
			"check_for_al_error",
			"_drag_handler",
			"_is_drag",
			"_is_darg",
			"#include <emilib/gl_lib",
			"ipainter.hpp",
			"array_2d",
			"\\1\\l\\2_\\l\\3",
			"\\1\\l\\2",
			"\\1\\l\\2_\\l\\3",
			"\\1\\l2_\\l3",
			"_\\1",
			"on_key_down",
			"build_wall",
			"build_stairs",
			"build_height_field",
			"out_FragColor",
			"lua_Integer",
			"lua_State",
			"\\1_\\l\\2",
			"key_tracker",
			"touch_tracker",
			"set_gl_context",
			"u_fog_color",
			"u_sampler_perturb",
			"u_sampler_cube",
			"u_sampler",
			"v_normal",
			"v_shinyness",
			"v_fog_color",
			"v_color",
			"v_env_dir",
			"v_tc",
			"v_model_pos",
			"u_fog_radius",
			"u_eye_pos",
			"u_normal_mat",
			"u_m",
			"u_color",
			"u_mvp",
			"NAME_PAINT_GROUP",
			"set_uniform",
			"add_strip",
			"a_color",
			"a_tc",
			"a_normal",
			"a_pos",
			"NAME_PAINT_FUNCTION()",
			"a_pos",
			"Pos_Normal_TC_Color",
			"a_vert",
			"Pos_TC_Color",
			"gl::Usage::WRITE",
			"#include <gl_lib.hpp>",
			"fs::",
			"#include <file_system.hpp>",
			"error_context.hpp",
			"_event_ui",
			"_event_response",
			"EcPayload",
			"ErrorContext",
			"LOGURU_DECLARE_EC_TYPE",
			"LOGURU_EC_DATA_SIZE",
			"ec_printer_impl",
			"ec_format_impl",
			", const Config& ",
			"string_stream",
			"stream",
			"StringStream* out_stream, const EcData& ec_data",
			"StringStream* stream, const EcData& ec_data",
			"StringStream* out_stream, const EcData& ec_data",
			"stream_print",
			"/error_context_tools",
			"as_string",
			"StackEntryKernel",
			"MemMap",
			"paint::TexProxy",
			"#include <paint/tex_proxy.hpp>",
			"#include <tex_proxy.hpp>",
			"<",
			"<paint/shader_mngr.hpp>",
			"out_FragColor",
			"paint_strip(*prog)",
			"gl::Usage::WRITE",
			"#include <gl_lib.hpp>",
			"GLLIB_OPENGL_",
			"gl::Program",
			"gl::MeshPainter",
			"gl::FBO",
			"gl::",
			"gl::Program",
			"<gl_lib_opengl.hpp>",
			"gl_lib_opengl.hpp",
			"gl::Program",
			"gl::Texture",
			"GLProgram",
			"DECLARE_FS_OUTPUT",
			": irange",
			"util/irange.hpp",
			"file_system.hpp",
			" os::data_path() ",
			"#include <os/os.hpp> // data_file_path",
			"os::data_file_path",
			"util::fs::",
			"\\n\\n",
			"without_ending",
			"<loguru.hpp>",
			"SCOPE_EXIT{ \\1; };",
			"EditConfigObject",
			"erase",
			"array",
			"object",
			"as_object",
			"array_size",
			"is_object",
			"is_array",
			"ConfigObjectImpl",
			"as_array",
			"configuru::",
			"using namespace configuru",
			"Config",
			"LOG",
			"(RGBAf)\\1;",
			"(RangeF)\\1;",
			"asRGBAf(\\1);",
			"asRange(\\1);",
			"check",
			"config_tools.hpp>"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 275.0
	},
	"output.figlet_preview":
	{
		"height": 239.0
	},
	"output.find_results":
	{
		"height": 344.0
	},
	"pinned_build_system": "Packages/User/xcode.sublime-build",
	"project": "loguru.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"imagm",
				"Source/paint/image_mngr"
			],
			[
				"app",
				"Source/app/app.cpp"
			],
			[
				"vec",
				"Source/math/Vec2.hpp"
			],
			[
				"glliop",
				"Source/libs/gl_lib_opengl.hpp"
			],
			[
				"gl",
				"Source/libs/gl_lib_fwd.hpp"
			],
			[
				"gllib",
				"Source/libs/gl_lib_fwd.hpp"
			],
			[
				"glli",
				"Source/libs/gl_lib.hpp"
			],
			[
				"gll",
				"Source/libs/gl_lib_opengl.hpp"
			],
			[
				"cube",
				"Source/paint/CubeMap.hpp"
			],
			[
				"osio",
				"Source/osx/osx_ios_common.mm"
			],
			[
				"os",
				"Source/osx/OSX.mm"
			],
			[
				"main",
				"Source/main.cpp"
			],
			[
				"gllibf",
				"Source/libs/gl_lib_fwd.hpp"
			],
			[
				"key",
				"Source/gui/Key.hpp"
			],
			[
				"gllif",
				"Source/libs/gl_lib_fwd.hpp"
			],
			[
				"levelp",
				"Source/app/LevelPainter.cpp"
			],
			[
				"shaderm",
				"Source/paint/ShaderMngr.cpp"
			],
			[
				"mai",
				"Source/main.cpp"
			],
			[
				"ap",
				"Source/app/App.cpp"
			],
			[
				"sys",
				"Source/core/System.hpp"
			],
			[
				"keyt",
				"Source/gui/KeyTracker.cpp"
			],
			[
				"toch",
				"Source/gui/TouchTracker.cpp"
			],
			[
				"keytr",
				"Source/gui/KeyTracker.hpp"
			],
			[
				"touch",
				"Source/gui/TouchTracker.hpp"
			],
			[
				"maincpp",
				"Source/main.cpp"
			],
			[
				"ipa",
				"Source/paint/IPainter.hpp"
			],
			[
				"comp",
				"Source/gui/Component.hpp"
			],
			[
				"texm",
				"Source/paint/TexMngr.cpp"
			],
			[
				"files",
				"Source/libs/file_system.hpp"
			],
			[
				"world",
				"Source/world/World.hpp"
			],
			[
				"singl",
				"Source/util/Singleton.hpp"
			],
			[
				"syst",
				"Source/core/System.cpp"
			],
			[
				"gllibto",
				"Source/paint/gl_lib_tools.cpp"
			],
			[
				"paintu",
				"Source/paint/PaintUtil.cpp"
			],
			[
				"logur",
				"Source/libs/loguru.hpp"
			],
			[
				"os.h",
				"Source/os/OS.hpp"
			],
			[
				"glib",
				"Source/libs/gl_lib.cpp"
			],
			[
				"aabb",
				"Source/math/AABB.hpp"
			],
			[
				"glibf",
				"Source/libs/gl_lib_fwd.hpp"
			],
			[
				"loguru",
				"Source/libs/loguru.hpp"
			],
			[
				"paintfw",
				"Source/paint/fwd.hpp"
			],
			[
				"fbo",
				"Source/paint/FBO.cpp"
			],
			[
				"paintf",
				"Source/paint/FBO.cpp"
			],
			[
				"logu",
				"code/libs/loguru.hpp"
			],
			[
				"log",
				"code/libs/loguru.hpp"
			],
			[
				"string",
				"code/util/string.hpp"
			],
			[
				"stirnh",
				"code/util/string.hpp"
			],
			[
				"tuple_util",
				"code/util/tuple_util.hpp"
			],
			[
				"appfw",
				"code/app/fwd.hpp"
			],
			[
				"even",
				"code/app/events.hpp"
			],
			[
				"fwdh",
				"code/util/fwd_helper.hpp"
			],
			[
				"utilh",
				"code/threads/util.hpp"
			],
			[
				"apptyp",
				"code/app/types.hpp"
			],
			[
				"configf",
				"code/config/fwd.hpp"
			],
			[
				"appf",
				"code/app/fwd.hpp"
			],
			[
				"configfw",
				"code/config/fwd.hpp"
			],
			[
				"oguru",
				"code/libs/loguru.hpp"
			],
			[
				"configu",
				"code/libs/configuru.hpp"
			],
			[
				"config",
				"data/config.cfg"
			],
			[
				"m",
				"code/main.cpp"
			],
			[
				"erro",
				"code/util/error_context_tools.cpp"
			],
			[
				"error",
				"code/libs/error_context.hpp"
			],
			[
				"utilerr",
				"code/util/error_context.cpp"
			],
			[
				"errorto",
				"code/util/error_context_tools.hpp"
			],
			[
				"testin",
				"data/test_in.cfg"
			],
			[
				"eror",
				"code/libs/error_context.hpp"
			],
			[
				"eror_conte",
				"code/util/error_context.cpp"
			],
			[
				"util",
				"code/util/util.hpp"
			],
			[
				"fil",
				"code/util/file_system.hpp"
			],
			[
				"single",
				"code/util/singleton.hpp"
			],
			[
				"erroc",
				"code/util/error_context.hpp"
			],
			[
				"memm",
				"code/libs/mem_map.cpp"
			],
			[
				"errorc",
				"code/util/error_context.hpp"
			],
			[
				"mma",
				"code/os/mmap.hpp"
			],
			[
				"pvr",
				"generate_pvr.py"
			],
			[
				"texp",
				"code/paint/tex_proxy.hpp"
			],
			[
				"color",
				"code/paint/color_types.hpp"
			],
			[
				"paifw",
				"code/paint/fwd.hpp"
			],
			[
				"textur",
				"code/paint/texture.hpp"
			],
			[
				"prof",
				"code/util/profiler.hpp"
			],
			[
				"texpa",
				"code/libs/text_paint.hpp"
			],
			[
				"sdl_events",
				"libs/SDL2.framework/Headers/SDL_events.h"
			],
			[
				"imgui_sdl.hpp",
				"code/libs/imgui_sdl.hpp"
			],
			[
				"vec3",
				"code/math/vec3.hpp"
			],
			[
				"mat3",
				"code/math/mat3.hpp"
			],
			[
				"mat4",
				"code/math/mat4.hpp"
			],
			[
				"textmm",
				"code/libs/text_paint.mm"
			],
			[
				"utf8",
				"code/util/utf8.cpp"
			],
			[
				"imgusdl",
				"code/libs/imgui_sdl.cpp"
			],
			[
				"textp",
				"code/libs/text_paint.mm"
			],
			[
				"text",
				"code/paint/text.cpp"
			],
			[
				"glop",
				"code/gl_lib_opengl.hpp"
			],
			[
				"text_p",
				"code/os/text_paint.hpp"
			],
			[
				"mathf",
				"code/math/fwd.hpp"
			],
			[
				"vec4",
				"code/math/vec4.hpp"
			],
			[
				"color_types",
				"code/paint/color_types.hpp"
			],
			[
				"tex",
				"code/paint/text.hpp"
			],
			[
				"glfw",
				"code/gl_lib_fwd.hpp"
			],
			[
				"gllibh",
				"code/gl_lib.hpp"
			],
			[
				"paint",
				"code/paint/painter.cpp"
			],
			[
				"imguisd",
				"code/libs/imgui_sdl.cpp"
			],
			[
				"textu",
				"code/paint/texture.hpp"
			],
			[
				"paintfwd",
				"code/paint/fwd.hpp"
			],
			[
				"shadm",
				"code/paint/shader_mngr.hpp"
			],
			[
				"math",
				"code/math/math.hpp"
			],
			[
				"gl_li_f",
				"code/gl_lib_fwd.hpp"
			],
			[
				"fwd",
				"code/app/fwd.hpp"
			],
			[
				"painfw",
				"code/paint/fwd.hpp"
			],
			[
				"irna",
				"code/util/irange.hpp"
			],
			[
				"irang",
				"code/util/irange.hpp"
			],
			[
				"stbi",
				"code/libs/stb/stb_image.h"
			],
			[
				"array",
				"code/util/array2D.hpp"
			],
			[
				"ima",
				"code/paint/image.hpp"
			],
			[
				"sham",
				"code/paint/shader_mngr.cpp"
			],
			[
				"progr",
				"code/paint/gl_program.cpp"
			],
			[
				"open",
				"code/paint/opengl.hpp"
			],
			[
				"gl2",
				"data/shaders/gl2.glsl"
			],
			[
				"gl3",
				"data/shaders/gl3.glsl"
			],
			[
				"gles",
				"data/shaders/gles.glsl"
			],
			[
				"porgram",
				"code/paint/gl_program.hpp"
			],
			[
				"glte",
				"code/paint/gl_texture.hpp"
			],
			[
				"vbo",
				"code/paint/vbo.cpp"
			],
			[
				"vao",
				"code/paint/vao.cpp"
			],
			[
				"vertex",
				"code/paint/vertex_buffer.hpp"
			],
			[
				"vert",
				"code/paint/vertex_buffer.hpp"
			],
			[
				"shader",
				"code/paint/shader_mngr.hpp"
			],
			[
				"painter",
				"code/paint/painter.hpp"
			],
			[
				"opengl",
				"code/paint/opengl.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 226.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
